#!/usr/bin/env python
import SoftLayer
from prettytable import PrettyTable

client = SoftLayer.Client()
accountClient = client['SoftLayer_Account']
''' Env. variables for credential
export SL_USERNAME=xxxxxx
export SL_API_KEY=xxxxxx
'''

try:
    maskval='mask[location.pathString,id,hostname,domain,maxCpu,maxMemory,primaryIpAddress,primaryBackendIpAddress,operatingSystem.passwords,activeTransaction.transactionStatus.friendlyName]'

    vms = accountClient.getVirtualGuests(mask=maskval)

    vmlist = PrettyTable(['Location', 'ServerId', 'Hostname', 'Domain', 'CPU', 'Memory', 'PublicIP', 'PrivateIP', 'Password', 'OS', 'Transaction'])
    for vm in vms:
        print (vm)
        location = vm['location'].get('pathString') if vm.get('location') else '-'
        passwd = vm['operatingSystem'].get('passwords')[0].get('password') if vm.get('operatingSystem') else '-'
        #osVer = vm['operatingSystem'].get('softwareLicense').get('softwareDescription').get('longDescription') if vm.get('operatingSystem') else '-'
        osVer = vm['operatingSystem'].get('softwareLicense').get('softwareDescription').get('referenceCode') if vm.get('operatingSystem') else '-'
        transaction = vm['activeTransaction'].get('transactionStatus').get('friendlyName') if vm.get('activeTransaction') else '-'
        vmlist.add_row([location,vm['id'],vm['hostname'],vm['domain'],vm['maxCpu'],vm['maxMemory'],vm.get('primaryIpAddress'),vm.get('primaryBackendIpAddress'),passwd, osVer, transaction ])
    vmlist.align['Location'] = 'l'
    vmlist.align['Hostname'] = 'r'
    vmlist.align['Domain'] = 'l'
    print vmlist.get_string(sortby='Location')

except SoftLayer.SoftLayerAPIError as e:
    print("Error. " % (e.faultCode, e.faultString))
